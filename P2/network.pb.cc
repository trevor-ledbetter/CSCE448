// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: network.proto

#include "network.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace network {
class ClientConnectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientConnect>
      _instance;
} _ClientConnect_default_instance_;
class ServerAllowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerAllow>
      _instance;
} _ServerAllow_default_instance_;
class FollowRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FollowRequest>
      _instance;
} _FollowRequest_default_instance_;
class FollowReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FollowReply>
      _instance;
} _FollowReply_default_instance_;
class UnfollowRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnfollowRequest>
      _instance;
} _UnfollowRequest_default_instance_;
class UnfollowReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnfollowReply>
      _instance;
} _UnfollowReply_default_instance_;
class ListRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListRequest>
      _instance;
} _ListRequest_default_instance_;
class ListReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListReply>
      _instance;
} _ListReply_default_instance_;
class PostDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Post>
      _instance;
} _Post_default_instance_;
class TimelineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Timeline>
      _instance;
} _Timeline_default_instance_;
class UserDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserData>
      _instance;
} _UserData_default_instance_;
class UserDataBase_AllUsersEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserDataBase_AllUsersEntry_DoNotUse>
      _instance;
} _UserDataBase_AllUsersEntry_DoNotUse_default_instance_;
class UserDataBaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserDataBase>
      _instance;
} _UserDataBase_default_instance_;
class DebugRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DebugRequest>
      _instance;
} _DebugRequest_default_instance_;
class DebugReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DebugReply>
      _instance;
} _DebugReply_default_instance_;
}  // namespace network
namespace protobuf_network_2eproto {
void InitDefaultsClientConnectImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::network::_ClientConnect_default_instance_;
    new (ptr) ::network::ClientConnect();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::network::ClientConnect::InitAsDefaultInstance();
}

void InitDefaultsClientConnect() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClientConnectImpl);
}

void InitDefaultsServerAllowImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::network::_ServerAllow_default_instance_;
    new (ptr) ::network::ServerAllow();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::network::ServerAllow::InitAsDefaultInstance();
}

void InitDefaultsServerAllow() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsServerAllowImpl);
}

void InitDefaultsFollowRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::network::_FollowRequest_default_instance_;
    new (ptr) ::network::FollowRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::network::FollowRequest::InitAsDefaultInstance();
}

void InitDefaultsFollowRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFollowRequestImpl);
}

void InitDefaultsFollowReplyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::network::_FollowReply_default_instance_;
    new (ptr) ::network::FollowReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::network::FollowReply::InitAsDefaultInstance();
}

void InitDefaultsFollowReply() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFollowReplyImpl);
}

void InitDefaultsUnfollowRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::network::_UnfollowRequest_default_instance_;
    new (ptr) ::network::UnfollowRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::network::UnfollowRequest::InitAsDefaultInstance();
}

void InitDefaultsUnfollowRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUnfollowRequestImpl);
}

void InitDefaultsUnfollowReplyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::network::_UnfollowReply_default_instance_;
    new (ptr) ::network::UnfollowReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::network::UnfollowReply::InitAsDefaultInstance();
}

void InitDefaultsUnfollowReply() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUnfollowReplyImpl);
}

void InitDefaultsListRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::network::_ListRequest_default_instance_;
    new (ptr) ::network::ListRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::network::ListRequest::InitAsDefaultInstance();
}

void InitDefaultsListRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListRequestImpl);
}

void InitDefaultsListReplyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::network::_ListReply_default_instance_;
    new (ptr) ::network::ListReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::network::ListReply::InitAsDefaultInstance();
}

void InitDefaultsListReply() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsListReplyImpl);
}

void InitDefaultsPostImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  {
    void* ptr = &::network::_Post_default_instance_;
    new (ptr) ::network::Post();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::network::Post::InitAsDefaultInstance();
}

void InitDefaultsPost() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPostImpl);
}

void InitDefaultsTimelineImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_network_2eproto::InitDefaultsPost();
  {
    void* ptr = &::network::_Timeline_default_instance_;
    new (ptr) ::network::Timeline();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::network::Timeline::InitAsDefaultInstance();
}

void InitDefaultsTimeline() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTimelineImpl);
}

void InitDefaultsUserDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_network_2eproto::InitDefaultsTimeline();
  {
    void* ptr = &::network::_UserData_default_instance_;
    new (ptr) ::network::UserData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::network::UserData::InitAsDefaultInstance();
}

void InitDefaultsUserData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserDataImpl);
}

void InitDefaultsUserDataBase_AllUsersEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_network_2eproto::InitDefaultsUserData();
  {
    void* ptr = &::network::_UserDataBase_AllUsersEntry_DoNotUse_default_instance_;
    new (ptr) ::network::UserDataBase_AllUsersEntry_DoNotUse();
  }
  ::network::UserDataBase_AllUsersEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsUserDataBase_AllUsersEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserDataBase_AllUsersEntry_DoNotUseImpl);
}

void InitDefaultsUserDataBaseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_network_2eproto::InitDefaultsUserDataBase_AllUsersEntry_DoNotUse();
  {
    void* ptr = &::network::_UserDataBase_default_instance_;
    new (ptr) ::network::UserDataBase();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::network::UserDataBase::InitAsDefaultInstance();
}

void InitDefaultsUserDataBase() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUserDataBaseImpl);
}

void InitDefaultsDebugRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  {
    void* ptr = &::network::_DebugRequest_default_instance_;
    new (ptr) ::network::DebugRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::network::DebugRequest::InitAsDefaultInstance();
}

void InitDefaultsDebugRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDebugRequestImpl);
}

void InitDefaultsDebugReplyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaultsTimestamp();
  {
    void* ptr = &::network::_DebugReply_default_instance_;
    new (ptr) ::network::DebugReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::network::DebugReply::InitAsDefaultInstance();
}

void InitDefaultsDebugReply() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDebugReplyImpl);
}

::google::protobuf::Metadata file_level_metadata[15];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::ClientConnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::ClientConnect, connectingclient_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::ServerAllow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::ServerAllow, ireplyvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::FollowRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::FollowRequest, requestingclient_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::FollowRequest, followrequest_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::FollowReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::FollowReply, ireplyvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::UnfollowRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::UnfollowRequest, requestingclient_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::UnfollowRequest, unfollowrequest_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::UnfollowReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::UnfollowReply, ireplyvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::ListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::ListReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::ListReply, names_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::Post, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::Post, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::Post, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::Post, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::Timeline, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::Timeline, posts_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::UserData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::UserData, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::UserData, user_timeline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::UserData, following_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::UserDataBase_AllUsersEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::UserDataBase_AllUsersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::UserDataBase_AllUsersEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::UserDataBase_AllUsersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::UserDataBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::UserDataBase, all_users_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::DebugRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::DebugRequest, timein_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::DebugReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::network::DebugReply, timeout_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::network::ClientConnect)},
  { 6, -1, sizeof(::network::ServerAllow)},
  { 12, -1, sizeof(::network::FollowRequest)},
  { 19, -1, sizeof(::network::FollowReply)},
  { 25, -1, sizeof(::network::UnfollowRequest)},
  { 32, -1, sizeof(::network::UnfollowReply)},
  { 38, -1, sizeof(::network::ListRequest)},
  { 43, -1, sizeof(::network::ListReply)},
  { 49, -1, sizeof(::network::Post)},
  { 57, -1, sizeof(::network::Timeline)},
  { 63, -1, sizeof(::network::UserData)},
  { 71, 78, sizeof(::network::UserDataBase_AllUsersEntry_DoNotUse)},
  { 80, -1, sizeof(::network::UserDataBase)},
  { 86, -1, sizeof(::network::DebugRequest)},
  { 92, -1, sizeof(::network::DebugReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::network::_ClientConnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::network::_ServerAllow_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::network::_FollowRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::network::_FollowReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::network::_UnfollowRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::network::_UnfollowReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::network::_ListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::network::_ListReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::network::_Post_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::network::_Timeline_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::network::_UserData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::network::_UserDataBase_AllUsersEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::network::_UserDataBase_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::network::_DebugRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::network::_DebugReply_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "network.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 15);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rnetwork.proto\022\007network\032\037google/protobu"
      "f/timestamp.proto\")\n\rClientConnect\022\030\n\020co"
      "nnectingClient\030\001 \001(\t\"\"\n\013ServerAllow\022\023\n\013I"
      "ReplyValue\030\001 \001(\005\"@\n\rFollowRequest\022\030\n\020req"
      "uestingClient\030\001 \001(\t\022\025\n\rfollowRequest\030\002 \001"
      "(\t\"\"\n\013FollowReply\022\023\n\013IReplyValue\030\001 \001(\005\"D"
      "\n\017UnfollowRequest\022\030\n\020requestingClient\030\001 "
      "\001(\t\022\027\n\017unfollowRequest\030\002 \001(\t\"$\n\rUnfollow"
      "Reply\022\023\n\013IReplyValue\030\001 \001(\005\"\r\n\013ListReques"
      "t\"\032\n\tListReply\022\r\n\005names\030\001 \003(\t\"O\n\004Post\022\014\n"
      "\004name\030\001 \001(\t\022(\n\004time\030\002 \001(\0132\032.google.proto"
      "buf.Timestamp\022\017\n\007content\030\003 \001(\t\"(\n\010Timeli"
      "ne\022\034\n\005posts\030\001 \003(\0132\r.network.Post\"U\n\010User"
      "Data\022\014\n\004name\030\001 \001(\t\022(\n\ruser_timeline\030\002 \001("
      "\0132\021.network.Timeline\022\021\n\tfollowing\030\003 \003(\t\""
      "\212\001\n\014UserDataBase\0226\n\tall_users\030\001 \003(\0132#.ne"
      "twork.UserDataBase.AllUsersEntry\032B\n\rAllU"
      "sersEntry\022\013\n\003key\030\001 \001(\t\022 \n\005value\030\002 \001(\0132\021."
      "network.UserData:\0028\001\":\n\014DebugRequest\022*\n\006"
      "timein\030\001 \001(\0132\032.google.protobuf.Timestamp"
      "\"9\n\nDebugReply\022+\n\007timeout\030\001 \001(\0132\032.google"
      ".protobuf.Timestamp2\255\002\n\003SNS\022=\n\013InitConne"
      "ct\022\026.network.ClientConnect\032\024.network.Ser"
      "verAllow\"\000\0228\n\006Follow\022\026.network.FollowReq"
      "uest\032\024.network.FollowReply\"\000\022>\n\010Unfollow"
      "\022\030.network.UnfollowRequest\032\026.network.Unf"
      "ollowReply\"\000\0222\n\004List\022\024.network.ListReque"
      "st\032\022.network.ListReply\"\000\0229\n\tExecDebug\022\025."
      "network.DebugRequest\032\023.network.DebugRepl"
      "y\"\000B6\n\033io.grpc.examples.helloworldB\017Hell"
      "oWorldProtoP\001\242\002\003HLWb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1227);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "network.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_network_2eproto
namespace network {

// ===================================================================

void ClientConnect::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientConnect::kConnectingClientFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientConnect::ClientConnect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_network_2eproto::InitDefaultsClientConnect();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:network.ClientConnect)
}
ClientConnect::ClientConnect(const ClientConnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  connectingclient_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.connectingclient().size() > 0) {
    connectingclient_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.connectingclient_);
  }
  // @@protoc_insertion_point(copy_constructor:network.ClientConnect)
}

void ClientConnect::SharedCtor() {
  connectingclient_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ClientConnect::~ClientConnect() {
  // @@protoc_insertion_point(destructor:network.ClientConnect)
  SharedDtor();
}

void ClientConnect::SharedDtor() {
  connectingclient_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClientConnect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientConnect::descriptor() {
  ::protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientConnect& ClientConnect::default_instance() {
  ::protobuf_network_2eproto::InitDefaultsClientConnect();
  return *internal_default_instance();
}

ClientConnect* ClientConnect::New(::google::protobuf::Arena* arena) const {
  ClientConnect* n = new ClientConnect;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientConnect::Clear() {
// @@protoc_insertion_point(message_clear_start:network.ClientConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  connectingclient_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ClientConnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:network.ClientConnect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string connectingClient = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_connectingclient()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->connectingclient().data(), static_cast<int>(this->connectingclient().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "network.ClientConnect.connectingClient"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:network.ClientConnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:network.ClientConnect)
  return false;
#undef DO_
}

void ClientConnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:network.ClientConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string connectingClient = 1;
  if (this->connectingclient().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->connectingclient().data(), static_cast<int>(this->connectingclient().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "network.ClientConnect.connectingClient");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->connectingclient(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:network.ClientConnect)
}

::google::protobuf::uint8* ClientConnect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:network.ClientConnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string connectingClient = 1;
  if (this->connectingclient().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->connectingclient().data(), static_cast<int>(this->connectingclient().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "network.ClientConnect.connectingClient");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->connectingclient(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:network.ClientConnect)
  return target;
}

size_t ClientConnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:network.ClientConnect)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string connectingClient = 1;
  if (this->connectingclient().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->connectingclient());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientConnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:network.ClientConnect)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientConnect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientConnect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:network.ClientConnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:network.ClientConnect)
    MergeFrom(*source);
  }
}

void ClientConnect::MergeFrom(const ClientConnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:network.ClientConnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.connectingclient().size() > 0) {

    connectingclient_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.connectingclient_);
  }
}

void ClientConnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:network.ClientConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientConnect::CopyFrom(const ClientConnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:network.ClientConnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientConnect::IsInitialized() const {
  return true;
}

void ClientConnect::Swap(ClientConnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientConnect::InternalSwap(ClientConnect* other) {
  using std::swap;
  connectingclient_.Swap(&other->connectingclient_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientConnect::GetMetadata() const {
  protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerAllow::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerAllow::kIReplyValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerAllow::ServerAllow()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_network_2eproto::InitDefaultsServerAllow();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:network.ServerAllow)
}
ServerAllow::ServerAllow(const ServerAllow& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ireplyvalue_ = from.ireplyvalue_;
  // @@protoc_insertion_point(copy_constructor:network.ServerAllow)
}

void ServerAllow::SharedCtor() {
  ireplyvalue_ = 0;
  _cached_size_ = 0;
}

ServerAllow::~ServerAllow() {
  // @@protoc_insertion_point(destructor:network.ServerAllow)
  SharedDtor();
}

void ServerAllow::SharedDtor() {
}

void ServerAllow::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerAllow::descriptor() {
  ::protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerAllow& ServerAllow::default_instance() {
  ::protobuf_network_2eproto::InitDefaultsServerAllow();
  return *internal_default_instance();
}

ServerAllow* ServerAllow::New(::google::protobuf::Arena* arena) const {
  ServerAllow* n = new ServerAllow;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerAllow::Clear() {
// @@protoc_insertion_point(message_clear_start:network.ServerAllow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ireplyvalue_ = 0;
  _internal_metadata_.Clear();
}

bool ServerAllow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:network.ServerAllow)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 IReplyValue = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ireplyvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:network.ServerAllow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:network.ServerAllow)
  return false;
#undef DO_
}

void ServerAllow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:network.ServerAllow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 IReplyValue = 1;
  if (this->ireplyvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ireplyvalue(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:network.ServerAllow)
}

::google::protobuf::uint8* ServerAllow::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:network.ServerAllow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 IReplyValue = 1;
  if (this->ireplyvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ireplyvalue(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:network.ServerAllow)
  return target;
}

size_t ServerAllow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:network.ServerAllow)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 IReplyValue = 1;
  if (this->ireplyvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ireplyvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerAllow::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:network.ServerAllow)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerAllow* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerAllow>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:network.ServerAllow)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:network.ServerAllow)
    MergeFrom(*source);
  }
}

void ServerAllow::MergeFrom(const ServerAllow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:network.ServerAllow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ireplyvalue() != 0) {
    set_ireplyvalue(from.ireplyvalue());
  }
}

void ServerAllow::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:network.ServerAllow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerAllow::CopyFrom(const ServerAllow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:network.ServerAllow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerAllow::IsInitialized() const {
  return true;
}

void ServerAllow::Swap(ServerAllow* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerAllow::InternalSwap(ServerAllow* other) {
  using std::swap;
  swap(ireplyvalue_, other->ireplyvalue_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerAllow::GetMetadata() const {
  protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FollowRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FollowRequest::kRequestingClientFieldNumber;
const int FollowRequest::kFollowRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FollowRequest::FollowRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_network_2eproto::InitDefaultsFollowRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:network.FollowRequest)
}
FollowRequest::FollowRequest(const FollowRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  requestingclient_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.requestingclient().size() > 0) {
    requestingclient_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.requestingclient_);
  }
  followrequest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.followrequest().size() > 0) {
    followrequest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.followrequest_);
  }
  // @@protoc_insertion_point(copy_constructor:network.FollowRequest)
}

void FollowRequest::SharedCtor() {
  requestingclient_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  followrequest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

FollowRequest::~FollowRequest() {
  // @@protoc_insertion_point(destructor:network.FollowRequest)
  SharedDtor();
}

void FollowRequest::SharedDtor() {
  requestingclient_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  followrequest_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FollowRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FollowRequest::descriptor() {
  ::protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FollowRequest& FollowRequest::default_instance() {
  ::protobuf_network_2eproto::InitDefaultsFollowRequest();
  return *internal_default_instance();
}

FollowRequest* FollowRequest::New(::google::protobuf::Arena* arena) const {
  FollowRequest* n = new FollowRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FollowRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:network.FollowRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requestingclient_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  followrequest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool FollowRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:network.FollowRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string requestingClient = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_requestingclient()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->requestingclient().data(), static_cast<int>(this->requestingclient().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "network.FollowRequest.requestingClient"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string followRequest = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_followrequest()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->followrequest().data(), static_cast<int>(this->followrequest().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "network.FollowRequest.followRequest"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:network.FollowRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:network.FollowRequest)
  return false;
#undef DO_
}

void FollowRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:network.FollowRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string requestingClient = 1;
  if (this->requestingclient().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->requestingclient().data(), static_cast<int>(this->requestingclient().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "network.FollowRequest.requestingClient");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->requestingclient(), output);
  }

  // string followRequest = 2;
  if (this->followrequest().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->followrequest().data(), static_cast<int>(this->followrequest().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "network.FollowRequest.followRequest");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->followrequest(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:network.FollowRequest)
}

::google::protobuf::uint8* FollowRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:network.FollowRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string requestingClient = 1;
  if (this->requestingclient().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->requestingclient().data(), static_cast<int>(this->requestingclient().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "network.FollowRequest.requestingClient");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->requestingclient(), target);
  }

  // string followRequest = 2;
  if (this->followrequest().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->followrequest().data(), static_cast<int>(this->followrequest().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "network.FollowRequest.followRequest");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->followrequest(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:network.FollowRequest)
  return target;
}

size_t FollowRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:network.FollowRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string requestingClient = 1;
  if (this->requestingclient().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->requestingclient());
  }

  // string followRequest = 2;
  if (this->followrequest().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->followrequest());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FollowRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:network.FollowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FollowRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FollowRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:network.FollowRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:network.FollowRequest)
    MergeFrom(*source);
  }
}

void FollowRequest::MergeFrom(const FollowRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:network.FollowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.requestingclient().size() > 0) {

    requestingclient_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.requestingclient_);
  }
  if (from.followrequest().size() > 0) {

    followrequest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.followrequest_);
  }
}

void FollowRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:network.FollowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FollowRequest::CopyFrom(const FollowRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:network.FollowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FollowRequest::IsInitialized() const {
  return true;
}

void FollowRequest::Swap(FollowRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FollowRequest::InternalSwap(FollowRequest* other) {
  using std::swap;
  requestingclient_.Swap(&other->requestingclient_);
  followrequest_.Swap(&other->followrequest_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FollowRequest::GetMetadata() const {
  protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FollowReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FollowReply::kIReplyValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FollowReply::FollowReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_network_2eproto::InitDefaultsFollowReply();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:network.FollowReply)
}
FollowReply::FollowReply(const FollowReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ireplyvalue_ = from.ireplyvalue_;
  // @@protoc_insertion_point(copy_constructor:network.FollowReply)
}

void FollowReply::SharedCtor() {
  ireplyvalue_ = 0;
  _cached_size_ = 0;
}

FollowReply::~FollowReply() {
  // @@protoc_insertion_point(destructor:network.FollowReply)
  SharedDtor();
}

void FollowReply::SharedDtor() {
}

void FollowReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FollowReply::descriptor() {
  ::protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FollowReply& FollowReply::default_instance() {
  ::protobuf_network_2eproto::InitDefaultsFollowReply();
  return *internal_default_instance();
}

FollowReply* FollowReply::New(::google::protobuf::Arena* arena) const {
  FollowReply* n = new FollowReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FollowReply::Clear() {
// @@protoc_insertion_point(message_clear_start:network.FollowReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ireplyvalue_ = 0;
  _internal_metadata_.Clear();
}

bool FollowReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:network.FollowReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 IReplyValue = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ireplyvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:network.FollowReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:network.FollowReply)
  return false;
#undef DO_
}

void FollowReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:network.FollowReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 IReplyValue = 1;
  if (this->ireplyvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ireplyvalue(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:network.FollowReply)
}

::google::protobuf::uint8* FollowReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:network.FollowReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 IReplyValue = 1;
  if (this->ireplyvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ireplyvalue(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:network.FollowReply)
  return target;
}

size_t FollowReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:network.FollowReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 IReplyValue = 1;
  if (this->ireplyvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ireplyvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FollowReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:network.FollowReply)
  GOOGLE_DCHECK_NE(&from, this);
  const FollowReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FollowReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:network.FollowReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:network.FollowReply)
    MergeFrom(*source);
  }
}

void FollowReply::MergeFrom(const FollowReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:network.FollowReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ireplyvalue() != 0) {
    set_ireplyvalue(from.ireplyvalue());
  }
}

void FollowReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:network.FollowReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FollowReply::CopyFrom(const FollowReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:network.FollowReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FollowReply::IsInitialized() const {
  return true;
}

void FollowReply::Swap(FollowReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FollowReply::InternalSwap(FollowReply* other) {
  using std::swap;
  swap(ireplyvalue_, other->ireplyvalue_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FollowReply::GetMetadata() const {
  protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnfollowRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnfollowRequest::kRequestingClientFieldNumber;
const int UnfollowRequest::kUnfollowRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnfollowRequest::UnfollowRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_network_2eproto::InitDefaultsUnfollowRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:network.UnfollowRequest)
}
UnfollowRequest::UnfollowRequest(const UnfollowRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  requestingclient_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.requestingclient().size() > 0) {
    requestingclient_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.requestingclient_);
  }
  unfollowrequest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.unfollowrequest().size() > 0) {
    unfollowrequest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unfollowrequest_);
  }
  // @@protoc_insertion_point(copy_constructor:network.UnfollowRequest)
}

void UnfollowRequest::SharedCtor() {
  requestingclient_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unfollowrequest_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UnfollowRequest::~UnfollowRequest() {
  // @@protoc_insertion_point(destructor:network.UnfollowRequest)
  SharedDtor();
}

void UnfollowRequest::SharedDtor() {
  requestingclient_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unfollowrequest_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UnfollowRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnfollowRequest::descriptor() {
  ::protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnfollowRequest& UnfollowRequest::default_instance() {
  ::protobuf_network_2eproto::InitDefaultsUnfollowRequest();
  return *internal_default_instance();
}

UnfollowRequest* UnfollowRequest::New(::google::protobuf::Arena* arena) const {
  UnfollowRequest* n = new UnfollowRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnfollowRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:network.UnfollowRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requestingclient_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  unfollowrequest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool UnfollowRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:network.UnfollowRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string requestingClient = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_requestingclient()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->requestingclient().data(), static_cast<int>(this->requestingclient().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "network.UnfollowRequest.requestingClient"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string unfollowRequest = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unfollowrequest()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->unfollowrequest().data(), static_cast<int>(this->unfollowrequest().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "network.UnfollowRequest.unfollowRequest"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:network.UnfollowRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:network.UnfollowRequest)
  return false;
#undef DO_
}

void UnfollowRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:network.UnfollowRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string requestingClient = 1;
  if (this->requestingclient().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->requestingclient().data(), static_cast<int>(this->requestingclient().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "network.UnfollowRequest.requestingClient");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->requestingclient(), output);
  }

  // string unfollowRequest = 2;
  if (this->unfollowrequest().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unfollowrequest().data(), static_cast<int>(this->unfollowrequest().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "network.UnfollowRequest.unfollowRequest");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->unfollowrequest(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:network.UnfollowRequest)
}

::google::protobuf::uint8* UnfollowRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:network.UnfollowRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string requestingClient = 1;
  if (this->requestingclient().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->requestingclient().data(), static_cast<int>(this->requestingclient().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "network.UnfollowRequest.requestingClient");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->requestingclient(), target);
  }

  // string unfollowRequest = 2;
  if (this->unfollowrequest().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->unfollowrequest().data(), static_cast<int>(this->unfollowrequest().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "network.UnfollowRequest.unfollowRequest");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->unfollowrequest(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:network.UnfollowRequest)
  return target;
}

size_t UnfollowRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:network.UnfollowRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string requestingClient = 1;
  if (this->requestingclient().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->requestingclient());
  }

  // string unfollowRequest = 2;
  if (this->unfollowrequest().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unfollowrequest());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnfollowRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:network.UnfollowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UnfollowRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnfollowRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:network.UnfollowRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:network.UnfollowRequest)
    MergeFrom(*source);
  }
}

void UnfollowRequest::MergeFrom(const UnfollowRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:network.UnfollowRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.requestingclient().size() > 0) {

    requestingclient_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.requestingclient_);
  }
  if (from.unfollowrequest().size() > 0) {

    unfollowrequest_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unfollowrequest_);
  }
}

void UnfollowRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:network.UnfollowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnfollowRequest::CopyFrom(const UnfollowRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:network.UnfollowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnfollowRequest::IsInitialized() const {
  return true;
}

void UnfollowRequest::Swap(UnfollowRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnfollowRequest::InternalSwap(UnfollowRequest* other) {
  using std::swap;
  requestingclient_.Swap(&other->requestingclient_);
  unfollowrequest_.Swap(&other->unfollowrequest_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnfollowRequest::GetMetadata() const {
  protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnfollowReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnfollowReply::kIReplyValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnfollowReply::UnfollowReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_network_2eproto::InitDefaultsUnfollowReply();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:network.UnfollowReply)
}
UnfollowReply::UnfollowReply(const UnfollowReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ireplyvalue_ = from.ireplyvalue_;
  // @@protoc_insertion_point(copy_constructor:network.UnfollowReply)
}

void UnfollowReply::SharedCtor() {
  ireplyvalue_ = 0;
  _cached_size_ = 0;
}

UnfollowReply::~UnfollowReply() {
  // @@protoc_insertion_point(destructor:network.UnfollowReply)
  SharedDtor();
}

void UnfollowReply::SharedDtor() {
}

void UnfollowReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnfollowReply::descriptor() {
  ::protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnfollowReply& UnfollowReply::default_instance() {
  ::protobuf_network_2eproto::InitDefaultsUnfollowReply();
  return *internal_default_instance();
}

UnfollowReply* UnfollowReply::New(::google::protobuf::Arena* arena) const {
  UnfollowReply* n = new UnfollowReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnfollowReply::Clear() {
// @@protoc_insertion_point(message_clear_start:network.UnfollowReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ireplyvalue_ = 0;
  _internal_metadata_.Clear();
}

bool UnfollowReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:network.UnfollowReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 IReplyValue = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ireplyvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:network.UnfollowReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:network.UnfollowReply)
  return false;
#undef DO_
}

void UnfollowReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:network.UnfollowReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 IReplyValue = 1;
  if (this->ireplyvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ireplyvalue(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:network.UnfollowReply)
}

::google::protobuf::uint8* UnfollowReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:network.UnfollowReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 IReplyValue = 1;
  if (this->ireplyvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ireplyvalue(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:network.UnfollowReply)
  return target;
}

size_t UnfollowReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:network.UnfollowReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 IReplyValue = 1;
  if (this->ireplyvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ireplyvalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnfollowReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:network.UnfollowReply)
  GOOGLE_DCHECK_NE(&from, this);
  const UnfollowReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnfollowReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:network.UnfollowReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:network.UnfollowReply)
    MergeFrom(*source);
  }
}

void UnfollowReply::MergeFrom(const UnfollowReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:network.UnfollowReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ireplyvalue() != 0) {
    set_ireplyvalue(from.ireplyvalue());
  }
}

void UnfollowReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:network.UnfollowReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnfollowReply::CopyFrom(const UnfollowReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:network.UnfollowReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnfollowReply::IsInitialized() const {
  return true;
}

void UnfollowReply::Swap(UnfollowReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnfollowReply::InternalSwap(UnfollowReply* other) {
  using std::swap;
  swap(ireplyvalue_, other->ireplyvalue_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnfollowReply::GetMetadata() const {
  protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListRequest::ListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_network_2eproto::InitDefaultsListRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:network.ListRequest)
}
ListRequest::ListRequest(const ListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:network.ListRequest)
}

void ListRequest::SharedCtor() {
  _cached_size_ = 0;
}

ListRequest::~ListRequest() {
  // @@protoc_insertion_point(destructor:network.ListRequest)
  SharedDtor();
}

void ListRequest::SharedDtor() {
}

void ListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListRequest::descriptor() {
  ::protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListRequest& ListRequest::default_instance() {
  ::protobuf_network_2eproto::InitDefaultsListRequest();
  return *internal_default_instance();
}

ListRequest* ListRequest::New(::google::protobuf::Arena* arena) const {
  ListRequest* n = new ListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:network.ListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:network.ListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:network.ListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:network.ListRequest)
  return false;
#undef DO_
}

void ListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:network.ListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:network.ListRequest)
}

::google::protobuf::uint8* ListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:network.ListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:network.ListRequest)
  return target;
}

size_t ListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:network.ListRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:network.ListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:network.ListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:network.ListRequest)
    MergeFrom(*source);
  }
}

void ListRequest::MergeFrom(const ListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:network.ListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:network.ListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListRequest::CopyFrom(const ListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:network.ListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListRequest::IsInitialized() const {
  return true;
}

void ListRequest::Swap(ListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListRequest::InternalSwap(ListRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListRequest::GetMetadata() const {
  protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListReply::kNamesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListReply::ListReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_network_2eproto::InitDefaultsListReply();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:network.ListReply)
}
ListReply::ListReply(const ListReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      names_(from.names_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:network.ListReply)
}

void ListReply::SharedCtor() {
  _cached_size_ = 0;
}

ListReply::~ListReply() {
  // @@protoc_insertion_point(destructor:network.ListReply)
  SharedDtor();
}

void ListReply::SharedDtor() {
}

void ListReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListReply::descriptor() {
  ::protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListReply& ListReply::default_instance() {
  ::protobuf_network_2eproto::InitDefaultsListReply();
  return *internal_default_instance();
}

ListReply* ListReply::New(::google::protobuf::Arena* arena) const {
  ListReply* n = new ListReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListReply::Clear() {
// @@protoc_insertion_point(message_clear_start:network.ListReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  names_.Clear();
  _internal_metadata_.Clear();
}

bool ListReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:network.ListReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string names = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_names()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->names(this->names_size() - 1).data(),
            static_cast<int>(this->names(this->names_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "network.ListReply.names"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:network.ListReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:network.ListReply)
  return false;
#undef DO_
}

void ListReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:network.ListReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string names = 1;
  for (int i = 0, n = this->names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->names(i).data(), static_cast<int>(this->names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "network.ListReply.names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->names(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:network.ListReply)
}

::google::protobuf::uint8* ListReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:network.ListReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string names = 1;
  for (int i = 0, n = this->names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->names(i).data(), static_cast<int>(this->names(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "network.ListReply.names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->names(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:network.ListReply)
  return target;
}

size_t ListReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:network.ListReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string names = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->names_size());
  for (int i = 0, n = this->names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->names(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:network.ListReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ListReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:network.ListReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:network.ListReply)
    MergeFrom(*source);
  }
}

void ListReply::MergeFrom(const ListReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:network.ListReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  names_.MergeFrom(from.names_);
}

void ListReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:network.ListReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListReply::CopyFrom(const ListReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:network.ListReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListReply::IsInitialized() const {
  return true;
}

void ListReply::Swap(ListReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListReply::InternalSwap(ListReply* other) {
  using std::swap;
  names_.InternalSwap(&other->names_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListReply::GetMetadata() const {
  protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Post::InitAsDefaultInstance() {
  ::network::_Post_default_instance_._instance.get_mutable()->time_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void Post::clear_time() {
  if (GetArenaNoVirtual() == NULL && time_ != NULL) {
    delete time_;
  }
  time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Post::kNameFieldNumber;
const int Post::kTimeFieldNumber;
const int Post::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Post::Post()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_network_2eproto::InitDefaultsPost();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:network.Post)
}
Post::Post(const Post& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.has_time()) {
    time_ = new ::google::protobuf::Timestamp(*from.time_);
  } else {
    time_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:network.Post)
}

void Post::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = NULL;
  _cached_size_ = 0;
}

Post::~Post() {
  // @@protoc_insertion_point(destructor:network.Post)
  SharedDtor();
}

void Post::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete time_;
}

void Post::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Post::descriptor() {
  ::protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Post& Post::default_instance() {
  ::protobuf_network_2eproto::InitDefaultsPost();
  return *internal_default_instance();
}

Post* Post::New(::google::protobuf::Arena* arena) const {
  Post* n = new Post;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Post::Clear() {
// @@protoc_insertion_point(message_clear_start:network.Post)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && time_ != NULL) {
    delete time_;
  }
  time_ = NULL;
  _internal_metadata_.Clear();
}

bool Post::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:network.Post)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "network.Post.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string content = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "network.Post.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:network.Post)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:network.Post)
  return false;
#undef DO_
}

void Post::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:network.Post)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "network.Post.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .google.protobuf.Timestamp time = 2;
  if (this->has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->time_, output);
  }

  // string content = 3;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "network.Post.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->content(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:network.Post)
}

::google::protobuf::uint8* Post::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:network.Post)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "network.Post.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .google.protobuf.Timestamp time = 2;
  if (this->has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->time_, deterministic, target);
  }

  // string content = 3;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "network.Post.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->content(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:network.Post)
  return target;
}

size_t Post::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:network.Post)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string content = 3;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // .google.protobuf.Timestamp time = 2;
  if (this->has_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Post::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:network.Post)
  GOOGLE_DCHECK_NE(&from, this);
  const Post* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Post>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:network.Post)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:network.Post)
    MergeFrom(*source);
  }
}

void Post::MergeFrom(const Post& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:network.Post)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.has_time()) {
    mutable_time()->::google::protobuf::Timestamp::MergeFrom(from.time());
  }
}

void Post::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:network.Post)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Post::CopyFrom(const Post& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:network.Post)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Post::IsInitialized() const {
  return true;
}

void Post::Swap(Post* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Post::InternalSwap(Post* other) {
  using std::swap;
  name_.Swap(&other->name_);
  content_.Swap(&other->content_);
  swap(time_, other->time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Post::GetMetadata() const {
  protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Timeline::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Timeline::kPostsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Timeline::Timeline()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_network_2eproto::InitDefaultsTimeline();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:network.Timeline)
}
Timeline::Timeline(const Timeline& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      posts_(from.posts_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:network.Timeline)
}

void Timeline::SharedCtor() {
  _cached_size_ = 0;
}

Timeline::~Timeline() {
  // @@protoc_insertion_point(destructor:network.Timeline)
  SharedDtor();
}

void Timeline::SharedDtor() {
}

void Timeline::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Timeline::descriptor() {
  ::protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Timeline& Timeline::default_instance() {
  ::protobuf_network_2eproto::InitDefaultsTimeline();
  return *internal_default_instance();
}

Timeline* Timeline::New(::google::protobuf::Arena* arena) const {
  Timeline* n = new Timeline;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Timeline::Clear() {
// @@protoc_insertion_point(message_clear_start:network.Timeline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  posts_.Clear();
  _internal_metadata_.Clear();
}

bool Timeline::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:network.Timeline)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .network.Post posts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_posts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:network.Timeline)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:network.Timeline)
  return false;
#undef DO_
}

void Timeline::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:network.Timeline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .network.Post posts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->posts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->posts(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:network.Timeline)
}

::google::protobuf::uint8* Timeline::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:network.Timeline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .network.Post posts = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->posts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->posts(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:network.Timeline)
  return target;
}

size_t Timeline::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:network.Timeline)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .network.Post posts = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->posts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->posts(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Timeline::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:network.Timeline)
  GOOGLE_DCHECK_NE(&from, this);
  const Timeline* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Timeline>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:network.Timeline)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:network.Timeline)
    MergeFrom(*source);
  }
}

void Timeline::MergeFrom(const Timeline& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:network.Timeline)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  posts_.MergeFrom(from.posts_);
}

void Timeline::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:network.Timeline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Timeline::CopyFrom(const Timeline& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:network.Timeline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Timeline::IsInitialized() const {
  return true;
}

void Timeline::Swap(Timeline* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Timeline::InternalSwap(Timeline* other) {
  using std::swap;
  posts_.InternalSwap(&other->posts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Timeline::GetMetadata() const {
  protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserData::InitAsDefaultInstance() {
  ::network::_UserData_default_instance_._instance.get_mutable()->user_timeline_ = const_cast< ::network::Timeline*>(
      ::network::Timeline::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserData::kNameFieldNumber;
const int UserData::kUserTimelineFieldNumber;
const int UserData::kFollowingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserData::UserData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_network_2eproto::InitDefaultsUserData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:network.UserData)
}
UserData::UserData(const UserData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      following_(from.following_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_user_timeline()) {
    user_timeline_ = new ::network::Timeline(*from.user_timeline_);
  } else {
    user_timeline_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:network.UserData)
}

void UserData::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_timeline_ = NULL;
  _cached_size_ = 0;
}

UserData::~UserData() {
  // @@protoc_insertion_point(destructor:network.UserData)
  SharedDtor();
}

void UserData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete user_timeline_;
}

void UserData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserData::descriptor() {
  ::protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserData& UserData::default_instance() {
  ::protobuf_network_2eproto::InitDefaultsUserData();
  return *internal_default_instance();
}

UserData* UserData::New(::google::protobuf::Arena* arena) const {
  UserData* n = new UserData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserData::Clear() {
// @@protoc_insertion_point(message_clear_start:network.UserData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  following_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && user_timeline_ != NULL) {
    delete user_timeline_;
  }
  user_timeline_ = NULL;
  _internal_metadata_.Clear();
}

bool UserData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:network.UserData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "network.UserData.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .network.Timeline user_timeline = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_timeline()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string following = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_following()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->following(this->following_size() - 1).data(),
            static_cast<int>(this->following(this->following_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "network.UserData.following"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:network.UserData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:network.UserData)
  return false;
#undef DO_
}

void UserData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:network.UserData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "network.UserData.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .network.Timeline user_timeline = 2;
  if (this->has_user_timeline()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->user_timeline_, output);
  }

  // repeated string following = 3;
  for (int i = 0, n = this->following_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->following(i).data(), static_cast<int>(this->following(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "network.UserData.following");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->following(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:network.UserData)
}

::google::protobuf::uint8* UserData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:network.UserData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "network.UserData.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .network.Timeline user_timeline = 2;
  if (this->has_user_timeline()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->user_timeline_, deterministic, target);
  }

  // repeated string following = 3;
  for (int i = 0, n = this->following_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->following(i).data(), static_cast<int>(this->following(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "network.UserData.following");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->following(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:network.UserData)
  return target;
}

size_t UserData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:network.UserData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string following = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->following_size());
  for (int i = 0, n = this->following_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->following(i));
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .network.Timeline user_timeline = 2;
  if (this->has_user_timeline()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->user_timeline_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:network.UserData)
  GOOGLE_DCHECK_NE(&from, this);
  const UserData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:network.UserData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:network.UserData)
    MergeFrom(*source);
  }
}

void UserData::MergeFrom(const UserData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:network.UserData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  following_.MergeFrom(from.following_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_user_timeline()) {
    mutable_user_timeline()->::network::Timeline::MergeFrom(from.user_timeline());
  }
}

void UserData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:network.UserData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserData::CopyFrom(const UserData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:network.UserData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserData::IsInitialized() const {
  return true;
}

void UserData::Swap(UserData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserData::InternalSwap(UserData* other) {
  using std::swap;
  following_.InternalSwap(&other->following_);
  name_.Swap(&other->name_);
  swap(user_timeline_, other->user_timeline_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserData::GetMetadata() const {
  protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

UserDataBase_AllUsersEntry_DoNotUse::UserDataBase_AllUsersEntry_DoNotUse() {}
UserDataBase_AllUsersEntry_DoNotUse::UserDataBase_AllUsersEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void UserDataBase_AllUsersEntry_DoNotUse::MergeFrom(const UserDataBase_AllUsersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata UserDataBase_AllUsersEntry_DoNotUse::GetMetadata() const {
  ::protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_network_2eproto::file_level_metadata[11];
}
void UserDataBase_AllUsersEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void UserDataBase::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserDataBase::kAllUsersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserDataBase::UserDataBase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_network_2eproto::InitDefaultsUserDataBase();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:network.UserDataBase)
}
UserDataBase::UserDataBase(const UserDataBase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  all_users_.MergeFrom(from.all_users_);
  // @@protoc_insertion_point(copy_constructor:network.UserDataBase)
}

void UserDataBase::SharedCtor() {
  _cached_size_ = 0;
}

UserDataBase::~UserDataBase() {
  // @@protoc_insertion_point(destructor:network.UserDataBase)
  SharedDtor();
}

void UserDataBase::SharedDtor() {
}

void UserDataBase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserDataBase::descriptor() {
  ::protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserDataBase& UserDataBase::default_instance() {
  ::protobuf_network_2eproto::InitDefaultsUserDataBase();
  return *internal_default_instance();
}

UserDataBase* UserDataBase::New(::google::protobuf::Arena* arena) const {
  UserDataBase* n = new UserDataBase;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserDataBase::Clear() {
// @@protoc_insertion_point(message_clear_start:network.UserDataBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  all_users_.Clear();
  _internal_metadata_.Clear();
}

bool UserDataBase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:network.UserDataBase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .network.UserData> all_users = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          UserDataBase_AllUsersEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              UserDataBase_AllUsersEntry_DoNotUse,
              ::std::string, ::network::UserData,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::network::UserData > > parser(&all_users_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "network.UserDataBase.AllUsersEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:network.UserDataBase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:network.UserDataBase)
  return false;
#undef DO_
}

void UserDataBase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:network.UserDataBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .network.UserData> all_users = 1;
  if (!this->all_users().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::network::UserData >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "network.UserDataBase.AllUsersEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->all_users().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->all_users().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::network::UserData >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::network::UserData >::const_iterator
          it = this->all_users().begin();
          it != this->all_users().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<UserDataBase_AllUsersEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(all_users_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<UserDataBase_AllUsersEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::network::UserData >::const_iterator
          it = this->all_users().begin();
          it != this->all_users().end(); ++it) {
        entry.reset(all_users_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:network.UserDataBase)
}

::google::protobuf::uint8* UserDataBase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:network.UserDataBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .network.UserData> all_users = 1;
  if (!this->all_users().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::network::UserData >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "network.UserDataBase.AllUsersEntry.key");
      }
    };

    if (deterministic &&
        this->all_users().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->all_users().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::network::UserData >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::network::UserData >::const_iterator
          it = this->all_users().begin();
          it != this->all_users().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<UserDataBase_AllUsersEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(all_users_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<UserDataBase_AllUsersEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::network::UserData >::const_iterator
          it = this->all_users().begin();
          it != this->all_users().end(); ++it) {
        entry.reset(all_users_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:network.UserDataBase)
  return target;
}

size_t UserDataBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:network.UserDataBase)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .network.UserData> all_users = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->all_users_size());
  {
    ::google::protobuf::scoped_ptr<UserDataBase_AllUsersEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::network::UserData >::const_iterator
        it = this->all_users().begin();
        it != this->all_users().end(); ++it) {
      entry.reset(all_users_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserDataBase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:network.UserDataBase)
  GOOGLE_DCHECK_NE(&from, this);
  const UserDataBase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserDataBase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:network.UserDataBase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:network.UserDataBase)
    MergeFrom(*source);
  }
}

void UserDataBase::MergeFrom(const UserDataBase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:network.UserDataBase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  all_users_.MergeFrom(from.all_users_);
}

void UserDataBase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:network.UserDataBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserDataBase::CopyFrom(const UserDataBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:network.UserDataBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserDataBase::IsInitialized() const {
  return true;
}

void UserDataBase::Swap(UserDataBase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserDataBase::InternalSwap(UserDataBase* other) {
  using std::swap;
  all_users_.Swap(&other->all_users_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserDataBase::GetMetadata() const {
  protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DebugRequest::InitAsDefaultInstance() {
  ::network::_DebugRequest_default_instance_._instance.get_mutable()->timein_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void DebugRequest::clear_timein() {
  if (GetArenaNoVirtual() == NULL && timein_ != NULL) {
    delete timein_;
  }
  timein_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DebugRequest::kTimeinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DebugRequest::DebugRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_network_2eproto::InitDefaultsDebugRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:network.DebugRequest)
}
DebugRequest::DebugRequest(const DebugRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_timein()) {
    timein_ = new ::google::protobuf::Timestamp(*from.timein_);
  } else {
    timein_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:network.DebugRequest)
}

void DebugRequest::SharedCtor() {
  timein_ = NULL;
  _cached_size_ = 0;
}

DebugRequest::~DebugRequest() {
  // @@protoc_insertion_point(destructor:network.DebugRequest)
  SharedDtor();
}

void DebugRequest::SharedDtor() {
  if (this != internal_default_instance()) delete timein_;
}

void DebugRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DebugRequest::descriptor() {
  ::protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DebugRequest& DebugRequest::default_instance() {
  ::protobuf_network_2eproto::InitDefaultsDebugRequest();
  return *internal_default_instance();
}

DebugRequest* DebugRequest::New(::google::protobuf::Arena* arena) const {
  DebugRequest* n = new DebugRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DebugRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:network.DebugRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && timein_ != NULL) {
    delete timein_;
  }
  timein_ = NULL;
  _internal_metadata_.Clear();
}

bool DebugRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:network.DebugRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Timestamp timein = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timein()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:network.DebugRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:network.DebugRequest)
  return false;
#undef DO_
}

void DebugRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:network.DebugRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp timein = 1;
  if (this->has_timein()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->timein_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:network.DebugRequest)
}

::google::protobuf::uint8* DebugRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:network.DebugRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp timein = 1;
  if (this->has_timein()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->timein_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:network.DebugRequest)
  return target;
}

size_t DebugRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:network.DebugRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Timestamp timein = 1;
  if (this->has_timein()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->timein_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DebugRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:network.DebugRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DebugRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DebugRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:network.DebugRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:network.DebugRequest)
    MergeFrom(*source);
  }
}

void DebugRequest::MergeFrom(const DebugRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:network.DebugRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_timein()) {
    mutable_timein()->::google::protobuf::Timestamp::MergeFrom(from.timein());
  }
}

void DebugRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:network.DebugRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DebugRequest::CopyFrom(const DebugRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:network.DebugRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DebugRequest::IsInitialized() const {
  return true;
}

void DebugRequest::Swap(DebugRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DebugRequest::InternalSwap(DebugRequest* other) {
  using std::swap;
  swap(timein_, other->timein_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DebugRequest::GetMetadata() const {
  protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DebugReply::InitAsDefaultInstance() {
  ::network::_DebugReply_default_instance_._instance.get_mutable()->timeout_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
}
void DebugReply::clear_timeout() {
  if (GetArenaNoVirtual() == NULL && timeout_ != NULL) {
    delete timeout_;
  }
  timeout_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DebugReply::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DebugReply::DebugReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_network_2eproto::InitDefaultsDebugReply();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:network.DebugReply)
}
DebugReply::DebugReply(const DebugReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_timeout()) {
    timeout_ = new ::google::protobuf::Timestamp(*from.timeout_);
  } else {
    timeout_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:network.DebugReply)
}

void DebugReply::SharedCtor() {
  timeout_ = NULL;
  _cached_size_ = 0;
}

DebugReply::~DebugReply() {
  // @@protoc_insertion_point(destructor:network.DebugReply)
  SharedDtor();
}

void DebugReply::SharedDtor() {
  if (this != internal_default_instance()) delete timeout_;
}

void DebugReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DebugReply::descriptor() {
  ::protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DebugReply& DebugReply::default_instance() {
  ::protobuf_network_2eproto::InitDefaultsDebugReply();
  return *internal_default_instance();
}

DebugReply* DebugReply::New(::google::protobuf::Arena* arena) const {
  DebugReply* n = new DebugReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DebugReply::Clear() {
// @@protoc_insertion_point(message_clear_start:network.DebugReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && timeout_ != NULL) {
    delete timeout_;
  }
  timeout_ = NULL;
  _internal_metadata_.Clear();
}

bool DebugReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:network.DebugReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Timestamp timeout = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timeout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:network.DebugReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:network.DebugReply)
  return false;
#undef DO_
}

void DebugReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:network.DebugReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp timeout = 1;
  if (this->has_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->timeout_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:network.DebugReply)
}

::google::protobuf::uint8* DebugReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:network.DebugReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp timeout = 1;
  if (this->has_timeout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->timeout_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:network.DebugReply)
  return target;
}

size_t DebugReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:network.DebugReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Timestamp timeout = 1;
  if (this->has_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->timeout_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DebugReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:network.DebugReply)
  GOOGLE_DCHECK_NE(&from, this);
  const DebugReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DebugReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:network.DebugReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:network.DebugReply)
    MergeFrom(*source);
  }
}

void DebugReply::MergeFrom(const DebugReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:network.DebugReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_timeout()) {
    mutable_timeout()->::google::protobuf::Timestamp::MergeFrom(from.timeout());
  }
}

void DebugReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:network.DebugReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DebugReply::CopyFrom(const DebugReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:network.DebugReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DebugReply::IsInitialized() const {
  return true;
}

void DebugReply::Swap(DebugReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DebugReply::InternalSwap(DebugReply* other) {
  using std::swap;
  swap(timeout_, other->timeout_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DebugReply::GetMetadata() const {
  protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_network_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace network

// @@protoc_insertion_point(global_scope)
